import{g as P,a as k,b as C}from"./gpu-BiFF8BDT.js";import{_ as U,c as d,k as f,a as t,w as i,r as s,R as F,o as c,j as a,t as m,I as h,i as D}from"./index-BAzr2iUZ.js";const I={name:"GpuList",data(){return{gpuList:[],dialogVisible:!1,dialogType:"",dialogTitle:"",currentGpu:null,metricsData:[],configForm:{maxPower:0,maxTemp:0},rules:{maxPower:[{required:!0,message:"请输入最大功耗",trigger:"blur"}],maxTemp:[{required:!0,message:"请输入温度阈值",trigger:"blur"}]},chart:null}},created(){this.fetchData()},methods:{async fetchData(){try{const l=await C();this.gpuList=l.data}catch(l){console.error("获取GPU列表失败:",l)}},async fetchGpuInfo(l){try{const e=await k(l);this.currentGpu=e.data}catch(e){throw console.error("获取GPU信息失败:",e),e}},async fetchMetrics(l){try{const e=await P(l);this.metricsData=e.data}catch(e){throw console.error("获取GPU指标失败:",e),e}},async handleView(l){this.dialogType="view",this.dialogTitle="GPU详情",this.dialogVisible=!0;try{await this.fetchGpuInfo(l.id),await this.fetchMetrics(l.id),this.$nextTick(()=>{this.initChart()})}catch{this.$message.error("获取GPU详情失败")}},async handleConfig(l){this.dialogType="config",this.dialogTitle="GPU配置";try{await this.fetchGpuInfo(l.id),this.configForm.maxPower=this.currentGpu.maxPower,this.configForm.maxTemp=this.currentGpu.maxTemp,this.dialogVisible=!0}catch{this.$message.error("获取GPU配置失败")}},async handleSubmit(){this.$refs.configForm.validate(async l=>{if(l)try{await this.updateConfig({id:this.currentGpu.id,data:this.configForm}),this.$message.success("配置更新成功"),this.dialogVisible=!1,this.fetchData()}catch{this.$message.error("更新GPU配置失败")}})},initChart(){this.chart||(this.chart=F(this.$refs.chartRef));const l={tooltip:{trigger:"axis"},xAxis:{type:"time",boundaryGap:!1},yAxis:{type:"value",min:0,max:100,name:"使用率(%)",nameLocation:"middle",nameGap:30},series:[{name:"GPU使用率",type:"line",data:this.metricsData.map(e=>[e.timestamp,e.usage]),smooth:!0,areaStyle:{}}]};this.chart.setOption(l)}},beforeUnmount(){this.chart&&(this.chart.dispose(),this.chart=null)}},L={class:"gpu-list"},B={key:0},N={key:0,class:"metrics-chart"},S={ref:"chartRef",style:{height:"300px"}},M={key:1};function R(l,e,q,z,o,g){const n=s("el-table-column"),y=s("el-tag"),x=s("el-progress"),p=s("el-button"),G=s("el-table"),u=s("el-descriptions-item"),w=s("el-descriptions"),_=s("el-input-number"),b=s("el-form-item"),V=s("el-form"),T=s("el-dialog");return c(),d("div",L,[e[9]||(e[9]=f("div",{class:"header"},[f("h2",null,"GPU列表")],-1)),t(G,{data:o.gpuList,border:""},{default:i(()=>[t(n,{prop:"id",label:"ID",width:"80"}),t(n,{prop:"name",label:"名称"}),t(n,{prop:"model",label:"型号"}),t(n,{prop:"memory",label:"显存"}),t(n,{prop:"status",label:"状态"},{default:i(({row:r})=>[t(y,{type:r.status==="active"?"success":"danger"},{default:i(()=>[a(m(r.status==="active"?"运行中":"已停止"),1)]),_:2},1032,["type"])]),_:1}),t(n,{prop:"usage",label:"使用率"},{default:i(({row:r})=>[t(x,{percentage:r.usage,status:r.usage>80?"exception":""},null,8,["percentage","status"])]),_:1}),t(n,{label:"操作",width:"200"},{default:i(({row:r})=>[t(p,{size:"small",onClick:v=>g.handleView(r)},{default:i(()=>e[4]||(e[4]=[a("查看")])),_:2},1032,["onClick"]),t(p,{size:"small",type:"primary",onClick:v=>g.handleConfig(r)},{default:i(()=>e[5]||(e[5]=[a("配置")])),_:2},1032,["onClick"])]),_:1})]),_:1},8,["data"]),t(T,{title:o.dialogTitle,modelValue:o.dialogVisible,"onUpdate:modelValue":e[3]||(e[3]=r=>o.dialogVisible=r),width:"600px"},{footer:i(()=>[t(p,{onClick:e[2]||(e[2]=r=>o.dialogVisible=!1)},{default:i(()=>e[7]||(e[7]=[a("取消")])),_:1}),o.dialogType==="config"?(c(),D(p,{key:0,type:"primary",onClick:g.handleSubmit},{default:i(()=>e[8]||(e[8]=[a("确定")])),_:1},8,["onClick"])):h("",!0)]),default:i(()=>[o.dialogType==="view"?(c(),d("div",B,[t(w,{column:2,border:""},{default:i(()=>[t(u,{label:"ID"},{default:i(()=>[a(m(o.currentGpu.id),1)]),_:1}),t(u,{label:"名称"},{default:i(()=>[a(m(o.currentGpu.name),1)]),_:1}),t(u,{label:"型号"},{default:i(()=>[a(m(o.currentGpu.model),1)]),_:1}),t(u,{label:"显存"},{default:i(()=>[a(m(o.currentGpu.memory),1)]),_:1}),t(u,{label:"温度"},{default:i(()=>[a(m(o.currentGpu.temperature)+"°C",1)]),_:1}),t(u,{label:"功耗"},{default:i(()=>[a(m(o.currentGpu.power)+"W",1)]),_:1})]),_:1}),o.metricsData.length>0?(c(),d("div",N,[e[6]||(e[6]=f("h3",null,"使用率趋势",-1)),f("div",S,null,512)])):h("",!0)])):o.dialogType==="config"?(c(),d("div",M,[t(V,{model:o.configForm,rules:o.rules,ref:"configForm","label-width":"100px"},{default:i(()=>[t(b,{label:"最大功耗",prop:"maxPower"},{default:i(()=>[t(_,{modelValue:o.configForm.maxPower,"onUpdate:modelValue":e[0]||(e[0]=r=>o.configForm.maxPower=r),min:0,max:500},null,8,["modelValue"])]),_:1}),t(b,{label:"温度阈值",prop:"maxTemp"},{default:i(()=>[t(_,{modelValue:o.configForm.maxTemp,"onUpdate:modelValue":e[1]||(e[1]=r=>o.configForm.maxTemp=r),min:0,max:100},null,8,["modelValue"])]),_:1})]),_:1},8,["model","rules"])])):h("",!0)]),_:1},8,["title","modelValue"])])}const E=U(I,[["render",R],["__scopeId","data-v-5b4e7018"]]);export{E as default};
